<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>https://onnx.ai/media/</title><link href="/" rel="alternate"></link><link href="/feeds/event_onnx-community-day-2022_06.atom.xml" rel="self"></link><id>/</id><updated>2022-06-24T00:00:00+00:00</updated><entry><title>Accelerating Machine Learning with ONNX Runtime and Hugging Face</title><link href="/onnx-community-day-2022_06/accelerating-machine-learning-with-onnx-runtime-and-hugging-face.html" rel="alternate"></link><updated>2022-06-24T00:00:00+00:00</updated><author><name>Jeff Boudier (Hugging Face)</name></author><id>tag:,2022-06-24:onnx-community-day-2022_06/accelerating-machine-learning-with-onnx-runtime-and-hugging-face.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Hugging Face has democratized state of the art machine learning with Transformers and the Hugging Face Hub, but deploying these large and complex models into production with good performance remains a challenge for most organizations. In this talk, Jeff Boudier will talk you through the latest solutions from Hugging Face to deploy models at scale with great performance leveraging ONNX and ONNX Runtime.&lt;/p&gt;
</summary><category term="hugging face"></category><category term="onnx"></category><category term="runtime"></category></entry><entry><title>Billions of NLP Inferences on the JVM using ONNX and DJL</title><link href="/onnx-community-day-2022_06/billions-of-nlp-inferences-on-the-jvm-using-onnx-and-djl.html" rel="alternate"></link><updated>2022-06-24T00:00:00+00:00</updated><author><name>Viet Yen Nguyen (Hypefactors)</name></author><id>tag:,2022-06-24:onnx-community-day-2022_06/billions-of-nlp-inferences-on-the-jvm-using-onnx-and-djl.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This session outlines the recently rolled out Hypefactors' MLOps infrastructure designed for billions NLP inferences a day. The workload serves media intelligence and OSINT use cases. The infrastructure is designed with a Java Virtual Machine-first approach that is enabled by ONNX interop and AWS' Deep Java Library. On top of that, we show how quantization drives further performance optimizations.&lt;/p&gt;
</summary><category term="nlp"></category></entry><entry><title>Bring the power of ONNX to Spark as it never happened before</title><link href="/onnx-community-day-2022_06/bring-the-power-of-onnx-to-spark-as-it-never-happened-before.html" rel="alternate"></link><updated>2022-06-24T00:00:00+00:00</updated><author><name>Xiyuan Wang (Huawei)</name></author><id>tag:,2022-06-24:onnx-community-day-2022_06/bring-the-power-of-onnx-to-spark-as-it-never-happened-before.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Both data processing platforms and deep learning frameworks are evolving in their own fields. Usually, Spark is used for offline data processing, and then various deep learning frameworks are used for data inference. A simplified API for DL Inferencing is very important as a bridge. What does an ideal data and deep learning inference pipeline look like? We'll discuss how to build your AI application using Spark and ONNX, the current status and initial idea of Spark community to improve this pipeline, and also make full use of the capabilities of Ascend Hardware Platform. This topic help you know the latest progress of Ascend Hardware Platform integration in ONNX, as well as the initial idea of the inference pipeline improvement in the Spark community.&lt;/p&gt;
</summary><category term="spark"></category></entry><entry><title>Build your high-performance model inference solution with DJL and ONNX Runtime</title><link href="/onnx-community-day-2022_06/build-your-high-performance-model-inference-solution-with-djl-and-onnx-runtime.html" rel="alternate"></link><updated>2022-06-24T00:00:00+00:00</updated><author><name>Qing Lan (AWS)</name></author><id>tag:,2022-06-24:onnx-community-day-2022_06/build-your-high-performance-model-inference-solution-with-djl-and-onnx-runtime.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In many companies, Java is the primary language for the teams to build up services. To have ONNX model onboard and integration, developers faced several technical challenges on the resource allocation and performance tuning. In this talk, we will walk you through the inference solution built by DJL, a ML library in Java. In the meantime, we will share some customer success stories with model hosting using ONNXRuntime and DJL.&lt;/p&gt;
</summary><category term="High-performance"></category><category term="djl"></category></entry><entry><title>Deploying on Desktop with ONNX</title><link href="/onnx-community-day-2022_06/deploying-on-desktop-with-onnx.html" rel="alternate"></link><updated>2022-06-24T00:00:00+00:00</updated><author><name>Alexander Zhang (Topaz Labs)</name></author><id>tag:,2022-06-24:onnx-community-day-2022_06/deploying-on-desktop-with-onnx.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;ORT provides the foundations for inference for Adobe's audio and video products (Premiere Topaz Labs develops deep learning based image quality software for professional and hobbyist photographers, which means running on the user's desktop or laptop. ONNX is an essential part of our solution to producing consistent results while making the most of a variety of consumer hardware. This type of deployment poses unique challenges and opportunities. Some experiences in this task have driven us to adopt certain useful strategies, tools, and techniques. Others remain interesting avenues for future improvement.&lt;/p&gt;
</summary><category term="onnx"></category></entry><entry><title>Designed to be Optimized</title><link href="/onnx-community-day-2022_06/designed-to-be-optimized.html" rel="alternate"></link><updated>2022-06-24T00:00:00+00:00</updated><author><name>Mauro Bennici (GhostWriterAI)</name></author><id>tag:,2022-06-24:onnx-community-day-2022_06/designed-to-be-optimized.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;ONNX Runtime allows us to export our models for different platforms and systems. Optimization, however, starts with design. Leaving it when everything seems ready to go a production could make effective optimization impossible. We will see the frequent mistakes and how to avoid them.&lt;/p&gt;
</summary><category term="optimization"></category><category term="onnx runtime"></category></entry><entry><title>Detect Safety Zone Violation in Manufacturing with SAS Event Stream Processing and ONNX models</title><link href="/onnx-community-day-2022_06/detect-safety-zone-violation-in-manufacturing-with-sas-event-stream-processing-and-onnx-models.html" rel="alternate"></link><updated>2022-06-24T00:00:00+00:00</updated><author><name>Allen Langlois  (SAS)</name></author><id>tag:,2022-06-24:onnx-community-day-2022_06/detect-safety-zone-violation-in-manufacturing-with-sas-event-stream-processing-and-onnx-models.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This session will present an in-production solution that takes advantage of SAS Event Stream Processing and ONNX runtime to support the detection of safety zone violations using computer vision pre-trained ONNX Model and involving multiple cameras. This solution was deployed at the factory edge with an architecture that, using Kubernetes and Kafka, ensures a reliable and stable environment for productionized computer vision solutions complemented with a cloud-centralized infrastructure to monitor, manage and collect information from multiple factories&lt;/p&gt;
</summary><category term="saftey"></category></entry><entry><title>High-Performance Inference for Video and Audio</title><link href="/onnx-community-day-2022_06/high-performance-inference-for-video-and-audio.html" rel="alternate"></link><updated>2022-06-24T00:00:00+00:00</updated><author><name>Nikhil Kalra (Adobe )</name></author><id>tag:,2022-06-24:onnx-community-day-2022_06/high-performance-inference-for-video-and-audio.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;ORT provides the foundations for inference for Adobe's audio and video products (Premiere Pro, After Effects, Character Animator) on both Mac and Windows. In this talk, we'll discuss how ORT with the DML backend is essential in enabling high-throughput inference for audio and video workflows on Windows, and how we use ORT to enable speech to text on Mac. Video workflows are unique because of the sheer amount of data they process; our customers frequently ingest high resolution video &amp;gt;= &lt;a class="reference external" href="mailto:4k&amp;#64;60fps"&gt;4k&amp;#64;60fps&lt;/a&gt; of which each frame may need to be passed through our models. Likewise, video workflows are inherently resource limited: the GPU is also being used for hardware decode and render at the same time. ORT gives us the tools to build complex frameworks and workflows on top of so that we can deliver ML-based features while ensuring that we're able to provide the best experience for our customers.&lt;/p&gt;
</summary><category term="High-performance"></category><category term="video"></category><category term="audio"></category></entry><entry><title>How to reconcile AI and privacy</title><link href="/onnx-community-day-2022_06/how-to-reconcile-ai-and-privacy.html" rel="alternate"></link><updated>2022-06-24T00:00:00+00:00</updated><author><name>Daniel Huynh (Mithril Security)</name></author><id>tag:,2022-06-24:onnx-community-day-2022_06/how-to-reconcile-ai-and-privacy.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;AI is revolutionising many fields from healthcare to biometrics these recent years. However due to security and privacy concerns, data is still being siloed and not shared enough due to the fear of data exposure and IP leakage. Confidential Computing is a recent technology that enables end-to-end encryption when analysing sensitive data. By leveraging Confidential Computing, data owners can share their data to AI companies, for instance to train or consume an AI model, without ever risking their data being stolen, leaked or used for any other purpose, as data remains protected even when shared to third parties. This talk aims to introduce the high level principles of Confidential Computing and how it can be used to deploy privacy friendly AI models. We will present BlindAI, an AI deployment solution, serving ONNX models with privacy guarantees, and see how it can be used to unlock confidential medical document analysis in the Cloud, or facial recognition with privacy guarantees.&lt;/p&gt;
</summary><category term="privacy"></category></entry><entry><title>Improving the online shopping experience with ONNX</title><link href="/onnx-community-day-2022_06/improving-the-online-shopping-experience-with-onnx.html" rel="alternate"></link><updated>2022-06-24T00:00:00+00:00</updated><author><name>Mtthew Leyburn (Bazaarvoice)</name></author><id>tag:,2022-06-24:onnx-community-day-2022_06/improving-the-online-shopping-experience-with-onnx.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Building and deploying AI solutions to the cloud at scale is complex. With massive datasets and performance considerations - finding a harmonious balance is crucial. This session will outline key learnings from deploying a Serverless application running inference on a sci-kit learn model using ONNX Runtime, and will share how to utilize the capabilities of ONNX runtime to improve the online shopping experience for shoppers and global brands.&lt;/p&gt;
</summary><category term="onnx"></category></entry><entry><title>INT8 Inference of Quantization-Aware trained models using ONNX-TensorRT</title><link href="/onnx-community-day-2022_06/int8-inference-of-quantization-aware-trained-models-using-onnx-tensorrt.html" rel="alternate"></link><updated>2022-06-24T00:00:00+00:00</updated><author><name>Dheeraj Peri (NVIDIA)</name></author><id>tag:,2022-06-24:onnx-community-day-2022_06/int8-inference-of-quantization-aware-trained-models-using-onnx-tensorrt.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Accelerating Deep Neural Networks (DNN) inference is an important step in realizing latency-critical deployment of real-world applications such as image classification, image segmentation, natural language processing, etc. The need to improve DNN's inference latency has sparked interest in running those models in lower precisions, such as FP16 and INT8. In particular, running DNNs in INT8 precision can offer faster inference and a much lower memory footprint than its floating-point counterpart. NVIDIA TensorRT supports Quantization-Aware Training (QAT) techniques to convert floating-point DNN models to INT8 precision. In this talk, we shall demonstrate end-end workflow of converting Tensorflow QAT models into ONNX, which is a standard intermediate representation to deploy using TensorRT. We use TF2ONNX package to convert a quantized Tensorflow model into ONNX. ONNX format makes it easier to visualize graphs via netron which can provide users information about placement of quantized nodes.&lt;/p&gt;
</summary><category term="int8"></category><category term="qat"></category><category term="tensorrt"></category></entry><entry><title>ONNX and the JVM</title><link href="/onnx-community-day-2022_06/onnx-and-the-jvm.html" rel="alternate"></link><updated>2022-06-24T00:00:00+00:00</updated><author><name>Adam Pocock (Oracle)</name></author><id>tag:,2022-06-24:onnx-community-day-2022_06/onnx-and-the-jvm.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Integrating machine learning into enterprises requires building and deploying ML models in the environments enterprises build their software in. Frequently this is in Java, or another language running on the JVM. In this talk we'll cover some of our recent work bringing the ONNX ecosystem to Java. We'll discuss uses of ONNX Runtime from Java, and also our work writing model converters from our Java ML library into ONNX format.&lt;/p&gt;
</summary><category term="onnx"></category><category term="jvm"></category></entry><entry><title>Onnx-mlir: an MLIR-based Compiler for ONNX Models - The Latest Status</title><link href="/onnx-community-day-2022_06/onnx-mlir-an-mlir-based-compiler-for-onnx-models-the-latest-status.html" rel="alternate"></link><updated>2022-06-24T00:00:00+00:00</updated><author><name>Tung D. Le (IBM)</name></author><id>tag:,2022-06-24:onnx-community-day-2022_06/onnx-mlir-an-mlir-based-compiler-for-onnx-models-the-latest-status.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Onnx-mlir is an open source compiler implemented using the Multi-Level Intermediate Representation (MLIR) infrastructure recently integrated in the LLVM project. It compiles ONNX models into native code for CPUs as well as specialized accelerators. It is able to compile models for many platforms including x86 (Linux/Windows/macOS), Power (Linux) and z/Architecture (Linux and z/OS). Onnx-mlir is a subproject inside the ONNX ecosystem and has attracted many contributions from IBM, Microsoft, Facebook, Arm and Universities since its incubation in 2019. In this talk, we will show the latest status of the project by providing the project overview as well as the latest features.&lt;/p&gt;
</summary><category term="mlir"></category></entry><entry><title>ONNX SIG: Arch &amp; Infra</title><link href="/onnx-community-day-2022_06/onnx-sig-arch-infra.html" rel="alternate"></link><updated>2022-06-24T00:00:00+00:00</updated><author><name>Liqun Fu (Microsoft)</name></author><id>tag:,2022-06-24:onnx-community-day-2022_06/onnx-sig-arch-infra.html</id><summary type="html"></summary><category term="SIG"></category></entry><entry><title>ONNX SIG: Converters</title><link href="/onnx-community-day-2022_06/onnx-sig-converters.html" rel="alternate"></link><updated>2022-06-24T00:00:00+00:00</updated><author><name>Kevin Chen (NVIDIA)</name></author><id>tag:,2022-06-24:onnx-community-day-2022_06/onnx-sig-converters.html</id><summary type="html"></summary><category term="converters"></category></entry><entry><title>ONNX SIG: Model &amp; Tutorials</title><link href="/onnx-community-day-2022_06/onnx-sig-model-tutorials.html" rel="alternate"></link><updated>2022-06-24T00:00:00+00:00</updated><author><name>Jacky Chen (Microsoft)</name></author><id>tag:,2022-06-24:onnx-community-day-2022_06/onnx-sig-model-tutorials.html</id><summary type="html"></summary><category term="models"></category><category term="tutorials"></category></entry><entry><title>ONNX SIG: Operators</title><link href="/onnx-community-day-2022_06/onnx-sig-operators.html" rel="alternate"></link><updated>2022-06-24T00:00:00+00:00</updated><author><name>Ganesan Ramalingam (Microsoft)</name></author><id>tag:,2022-06-24:onnx-community-day-2022_06/onnx-sig-operators.html</id><summary type="html"></summary><category term="Operators"></category></entry><entry><title>ONNX Steering Committee Update</title><link href="/onnx-community-day-2022_06/onnx-steering-committee-update.html" rel="alternate"></link><updated>2022-06-24T00:00:00+00:00</updated><author><name>Prasanth Pulavarthi (Microsoft)</name></author><id>tag:,2022-06-24:onnx-community-day-2022_06/onnx-steering-committee-update.html</id><summary type="html"></summary><category term="Steering Committee"></category></entry><entry><title>ONNX Tools: Polygraphy and ONNX-GraphSurgeon</title><link href="/onnx-community-day-2022_06/onnx-tools-polygraphy-and-onnx-graphsurgeon.html" rel="alternate"></link><updated>2022-06-24T00:00:00+00:00</updated><author><name>Pranav Marathe (NVIDIA)</name></author><id>tag:,2022-06-24:onnx-community-day-2022_06/onnx-tools-polygraphy-and-onnx-graphsurgeon.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Over the years, NVIDIA's TensorRT team has developed tooling that makes it easy to generate, transform, and debug ONNX models. Among other things, this includes a sanitizer that can simplify your models, and an automated bisector for debugging ('git bisect' for ONNX!). In this talk, I'll cover some of these tools and how you can effectively leverage them in your workflow.&lt;/p&gt;
</summary><category term="onnx"></category><category term="tools"></category><category term="graphsurgeon"></category></entry><entry><title>ONNX WG: Pre-processing</title><link href="/onnx-community-day-2022_06/onnx-wg-pre-processing.html" rel="alternate"></link><updated>2022-06-24T00:00:00+00:00</updated><author><name>Joaquin Anton (NVIDIA)</name></author><id>tag:,2022-06-24:onnx-community-day-2022_06/onnx-wg-pre-processing.html</id><summary type="html"></summary><category term="Pre-procesing"></category></entry><entry><title>PFVM - A Neural Network Compiler that uses ONNX as its intermediate representation</title><link href="/onnx-community-day-2022_06/pfvm-a-neural-network-compiler-that-uses-onnx-as-its-intermediate-representation.html" rel="alternate"></link><updated>2022-06-24T00:00:00+00:00</updated><author><name>Zijian Xu (Preferred Networks)</name></author><id>tag:,2022-06-24:onnx-community-day-2022_06/pfvm-a-neural-network-compiler-that-uses-onnx-as-its-intermediate-representation.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PFVM is a neural network compiler developed by Preferred Networks, which relies on ONNX as the Intermediate Representation format. PFVM is used in production environments to deploy models to various devices such as GPUs, multiple edge computing architectures, and PFN's own accelerator, MN-Core. PFVM's most salient features are; automatic checkpointing, operator fusion, and graph simplification that can be applied even when models have dynamic axes or unknown shapes. ONNX Shape inference becomes a critical element for all these optimizations, and the importance of bringing up more advanced shape inference mechanisms to address complex optimization scenarios is discussed in this talk.&lt;/p&gt;
</summary><category term="pfvm"></category></entry><entry><title>PyTorch-ONNX Converter</title><link href="/onnx-community-day-2022_06/pytorch-onnx-converter.html" rel="alternate"></link><updated>2022-06-24T00:00:00+00:00</updated><author><name>Bowen Bao (Microsoft)</name></author><id>tag:,2022-06-24:onnx-community-day-2022_06/pytorch-onnx-converter.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This session will present an overview of the PyTorch-ONNX converter, its implementation, and recent improvements to support a wide range of models.&lt;/p&gt;
</summary><category term="pytorch"></category><category term="converter"></category></entry><entry><title>QONNX: A proposal for representing arbitrary-precision quantized NNs in ONNX</title><link href="/onnx-community-day-2022_06/qonnx-a-proposal-for-representing-arbitrary-precision-quantized-nns-in-onnx.html" rel="alternate"></link><updated>2022-06-24T00:00:00+00:00</updated><author><name>Alessandro Pappalardo (AMD)</name></author><id>tag:,2022-06-24:onnx-community-day-2022_06/qonnx-a-proposal-for-representing-arbitrary-precision-quantized-nns-in-onnx.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We present extensions to the Open Neural Network Exchange (ONNX) intermediate representation format to represent arbitrary-precision quantized neural networks. We first introduce support for low precision quantization in existing ONNX-based quantization formats by leveraging integer clipping, resulting in two new backward-compatible variants: the quantized operator format with clipping and quantize-clip-dequantize (QCDQ) format. We then introduce a novel higher-level ONNX format called quantized ONNX (QONNX) that introduces three new operators —Quant, BipolarQuant, and Trunc— in order to represent uniform quantization. By keeping the QONNX IR high-level and flexible, we enable targeting a wider variety of platforms. We also present utilities for working with QONNX, as well as examples of its usage in the FINN and hls4ml toolchains. Finally, we introduce the QONNX model zoo to share low precision quantized neural networks.&lt;/p&gt;
</summary><category term="qonnx"></category></entry><entry><title>Responsible AI @ ONNX: Metadata, Model Cards, and Provenance</title><link href="/onnx-community-day-2022_06/responsible-ai-onnx-metadata-model-cards-and-provenance.html" rel="alternate"></link><updated>2022-06-24T00:00:00+00:00</updated><author><name>Rodolfo Gabe Esteves (Intel)</name></author><id>tag:,2022-06-24:onnx-community-day-2022_06/responsible-ai-onnx-metadata-model-cards-and-provenance.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The space of AI is growing rapidly. At this pace, it can be challenging for key AI stakeholders to identify and address social and regulatory concerns with AI, motivating the need for tools and methods to approach AI ethics challenges. A popular approach in the responsible AI space is using metadata to encode a “model card,” a versatile report detailing the configuration, ethical considerations, limitations, and quantitative analysis of an AI model. This approach can be used to enable transparency and fairness of the use case, filtering of high-quality AI models, pain point identification in AI pipelines, and help with establishing compliance and lineage. In this session, we will present our proposal and end-to-end proof of concept for metadata fields and model cards incorporated in Onnx to capture aspects of the model such as provenance &amp;amp; mixed precision representation.&lt;/p&gt;
</summary><category term="responsible AI"></category></entry><entry><title>Using ONNX with Qualcomm powered devices from smartphones to the cloud edge and everything in between.</title><link href="/onnx-community-day-2022_06/using-onnx-with-qualcomm-powered-devices-from-smartphones-to-the-cloud-edge-and-everything-in-between.html" rel="alternate"></link><updated>2022-06-24T00:00:00+00:00</updated><author><name>Felix Baum (Qualcomm)</name></author><id>tag:,2022-06-24:onnx-community-day-2022_06/using-onnx-with-qualcomm-powered-devices-from-smartphones-to-the-cloud-edge-and-everything-in-between.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Whenever our clients target high performant AI cloud inferencing servers, create new and exciting AI based experiences on mobile phones or improve our lives by adding more and more AI features into cars, many of them use ONNX models as an interchange format. Qualcomm helps to deploy and accelerate natural language processing, computer vision, classification, segmentation, and transformer based models in various verticals: Mobile, IoT, XR, Compute and Automotive. We created a link between ONNX and Qualcomm AI Engine direct that allows us to run the same model not only on various backends such as CPU, GPU, Hexagon processor or Low Power AI subsystem of the same SoC, and migrate it to run on range of the devices due to the portability that ONNX provides. In addition to the above, we would briefly cover in this session the work we are doing with Microsoft on collaboration for ONNX RT Execution Provider for a range of our AI accelerators.&lt;/p&gt;
</summary><category term="edge"></category></entry><entry><title>What's New in ONNX Runtime</title><link href="/onnx-community-day-2022_06/whats-new-in-onnx-runtime.html" rel="alternate"></link><updated>2022-06-24T00:00:00+00:00</updated><author><name>Ryan Hill (Microsoft)</name></author><id>tag:,2022-06-24:onnx-community-day-2022_06/whats-new-in-onnx-runtime.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk will share highlights of the ONNX Runtime 1.10-1.12 releases, including details on notable performance improvements, features, and platforms including mobile and web.&lt;/p&gt;
</summary><category term="onnx"></category><category term="runtime"></category></entry></feed>